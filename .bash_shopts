###########################################################
#
#   ~/.bash_shopts
#
#	Set up options for interactive shells
#
###########################################################

if test -n "$BASH_TRACE_STARTUP"; then echo Entering '~/.bash_shopts'; fi

# autocd  If  set,  a  command name that is the name of a directory is
# 		executed as if it were the argument to the cd command.  This
# 		option is only used by interactive shells.
# cdable_vars
# 		If  set, an argument to the cd builtin command that is not a
# 		directory is assumed to be the  name  of  a  variable  whose
# 		value is the directory to change to.
# cdspell If  set,  minor errors in the spelling of a directory compo-
# 		nent in a cd command will be corrected.  The errors  checked
# 		for  are transposed characters, a missing character, and one
# 		character too many.  If a correction is found, the corrected
# 		file name is printed, and the command proceeds.  This option
# 		is only used by interactive shells.
# checkhash
# 		If set, bash checks that a command found in the  hash  table
# 		exists  before trying to execute it.  If a hashed command no
# 		longer exists, a normal path search is performed.
# checkjobs
# 		If set, bash lists the status of  any  stopped  and  running
# 		jobs  before  exiting an interactive shell.  If any jobs are
# 		running, this causes the exit to be deferred until a  second
# 		exit  is  attempted  without an intervening command (see JOB
# 		CONTROL above).  The shell always postpones exiting  if  any
# 		jobs are stopped.
# checkwinsize
# 		If  set, bash checks the window size after each command and,
# 		if necessary, updates the values of LINES and COLUMNS.
shopt -s checkwinsize
# cmdhist If set, bash attempts to save all lines of  a  multiple-line
# 		command  in  the  same  history entry.  This allows easy re-
# 		editing of multi-line commands.
shopt -s cmdhist
# compat31
# 		If set, bash changes its behavior to  that  of  version  3.1
# 		with  respect  to  quoted  arguments to the conditional com-
# 		mand's =~ operator.
# compat32
# 		If set, bash changes its behavior to  that  of  version  3.2
# 		with respect to locale-specific string comparison when using
# 		the conditional command's < and > operators.
# compat40
# 		If set, bash changes its behavior to  that  of  version  4.0
# 		with respect to locale-specific string comparison when using
# 		the conditional command's < and > operators and  the  effect
# 		of interrupting a command list.
# dirspell
# 		If set, bash attempts spelling correction on directory names
# 		during word completion if the directory name initially  sup-
# 		plied does not exist.
# completion_strip_exe
# 		If  set,  whenever bash sees `foo.exe' during completion, it
# 		checks if `foo' is the same file and strips the suffix.
# dotglob If set, bash includes filenames beginning with a `.' in  the
# 		results of pathname expansion.
shopt -s dotglob
# execfail
# 		If  set,  a non-interactive shell will not exit if it cannot
# 		execute the file  specified  as  an  argument  to  the  exec
# 		builtin command.  An interactive shell does not exit if exec
# 		fails.
# expand_aliases
# 		If set,  aliases  are  expanded  as  described  above  under
# 		ALIASES.   This option is enabled by default for interactive
# 		shells.
shopt -s expand_aliases
# extdebug
# 		If set, behavior intended for use by debuggers is enabled:
# 		1.     The -F option to the  declare  builtin  displays  the
# 				source  file  name  and  line number corresponding to
# 				each function name supplied as an argument.
# 		2.     If the command run by the DEBUG trap returns  a  non-
# 				zero  value, the next command is skipped and not exe-
# 				cuted.
# 		3.     If the command run by the DEBUG trap returns a  value
# 				of  2,  and the shell is executing in a subroutine (a
# 				shell function or a shell script executed by the . or
# 				source builtins), a call to return is simulated.
# 		4.     BASH_ARGC  and  BASH_ARGV are updated as described in
# 				their descriptions above.
# 		5.     Function tracing is enabled:   command  substitution,
# 				shell functions, and subshells invoked with ( command
# 				) inherit the DEBUG and RETURN traps.
# 		6.     Error  tracing  is  enabled:   command  substitution,
# 				shell functions, and subshells invoked with ( command
# 				) inherit the ERROR trap.
# extglob If set, the extended  pattern  matching  features  described
# 		above under Pathname Expansion are enabled.
shopt -s extglob
# extquote
# 		If  set, $'string' and $"string" quoting is performed within
# 		${parameter} expansions enclosed  in  double  quotes.   This
# 		option is enabled by default.
shopt -s extquote
# failglob
# 		If  set, patterns which fail to match filenames during path-
# 		name expansion result in an expansion error.
# force_fignore
# 		If set, the suffixes specified by the FIGNORE shell variable
# 		cause  words  to  be ignored when performing word completion
# 		even if the ignored words are the only possible completions.
# 		See  SHELL  VARIABLES  above  for  a description of FIGNORE.
# 		This option is enabled by default.
shopt -s force_fignore
# globstar
# 		If set, the pattern ** used in a pathname expansion  context
# 		will  match  a files and zero or more directories and subdi-
# 		rectories.  If the pattern is followed by a /, only directo-
# 		ries and subdirectories match.
# gnu_errfmt
# 		If set, shell error messages are written in the standard GNU
# 		error message format.
# histappend
# 		If set, the history list is appended to the  file  named  by
# 		the  value  of  the  HISTFILE variable when the shell exits,
# 		rather than overwriting the file.
shopt -s histappend
# histreedit
# 		If set, and readline is being used,  a  user  is  given  the
# 		opportunity to re-edit a failed history substitution.
# histverify
# 		If  set,  and readline is being used, the results of history
# 		substitution are not immediately passed to the shell parser.
# 		Instead,  the  resulting  line  is  loaded into the readline
# 		editing buffer, allowing further modification.
# hostcomplete
# 		If set, and readline is being used,  bash  will  attempt  to
# 		perform  hostname  completion  when a word containing a @ is
# 		being completed (see Completing under READLINE above).  This
# 		is enabled by default.
shopt -s hostcomplete
# huponexit
# 		If  set,  bash will send SIGHUP to all jobs when an interac-
# 		tive login shell exits.
# interactive_comments
# 		If set, allow a word beginning with # to cause that word and
# 		all  remaining  characters  on that line to be ignored in an
# 		interactive shell (see  COMMENTS  above).   This  option  is
# 		enabled by default.
shopt -s interactive_comments
# lithist If  set,  and the cmdhist option is enabled, multi-line com-
# 		mands are saved to the history with embedded newlines rather
# 		than using semicolon separators where possible.
# login_shell
# 		The shell sets this option if it is started as a login shell
# 		(see INVOCATION above).  The value may not be changed.
# mailwarn
# 		If set, and a file that bash is checking for mail  has  been
# 		accessed  since  the  last  time it was checked, the message
# 		``The mail in mailfile has been read'' is displayed.
# no_empty_cmd_completion
# 		If set, and readline is being used, bash will not attempt to
# 		search  the PATH for possible completions when completion is
# 		attempted on an empty line.
shopt -s no_empty_cmd_completion
# nocaseglob
# 		If set, bash matches filenames in a case-insensitive fashion
# 		when  performing  pathname expansion (see Pathname Expansion
# 		above).
shopt -s nocaseglob
# nocasematch
# 		If set, bash matches patterns in a case-insensitive  fashion
# 		when  performing  matching while executing case or [[ condi-
# 		tional commands.
# nullglob
# 		If set, bash allows patterns which match no files (see Path-
# 		name  Expansion  above)  to  expand to a null string, rather
# 		than themselves.
# progcomp
# 		If set, the programmable completion facilities (see Program-
# 		mable Completion above) are enabled.  This option is enabled
# 		by default.
shopt -s progcomp
# promptvars
# 		If set, prompt strings undergo parameter expansion,  command
# 		substitution,  arithmetic expansion, and quote removal after
# 		being expanded as described in PROMPTING above.  This option
# 		is enabled by default.
shopt -s promptvars
# restricted_shell
# 		The  shell  sets  this option if it is started in restricted
# 		mode (see RESTRICTED SHELL below).  The  value  may  not  be
# 		changed.   This is not reset when the startup files are exe-
# 		cuted, allowing the startup files to discover whether or not
# 		a shell is restricted.
# shift_verbose
# 		If  set,  the shift builtin prints an error message when the
# 		shift count exceeds the number of positional parameters.
# sourcepath
# 		If set, the source (.) builtin uses the  value  of  PATH  to
# 		find  the directory containing the file supplied as an argu-
# 		ment.  This option is enabled by default.
shopt -s sourcepath
# xpg_echo
# 		If set, the echo builtin expands backslash-escape  sequences
# 		by default.

if test -n "$BASH_TRACE_STARTUP"; then echo Leaving '~/.bash_shopts'; fi
